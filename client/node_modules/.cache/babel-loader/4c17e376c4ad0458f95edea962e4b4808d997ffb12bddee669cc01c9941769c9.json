{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aslam\\\\OneDrive\\\\Desktop\\\\MT\\\\client\\\\src\\\\NavBar\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./NavBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is logged in (using localStorage as an example)\n    const user = localStorage.getItem(\"user\");\n    if (user) setIsLoggedIn(true);\n  }, []);\n  const handleLogout = async e => {\n    e.preventDefault();\n    console.log(\"Logout initiated...\");\n    try {\n      // Call the backend to log out the user\n      const res = await fetch(\"http://localhost:5000/api/user/logout\", {\n        method: \"GET\",\n        // Use GET method since that's what the backend expects\n        credentials: \"include\" // Include credentials if using sessions\n      });\n      console.log(\"Response status:\", res.status);\n      if (res.ok) {\n        localStorage.removeItem(\"user\"); // Remove user from localStorage\n        setIsLoggedIn(false); // Update state to reflect logged out\n        navigate(\"/\"); // Redirect to home page or login page after logout\n      } else {\n        alert(\"Logout failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-gradient-to-r from-blue-600 to-indigo-600 text-white p-4 shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"text-2xl font-bold tracking-wide\",\n        children: [\"chat\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-yellow-400\",\n          children: \"App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"bg-yellow-400 text-blue-900 px-4 py-2 rounded-lg font-semibold shadow-md hover:bg-yellow-500 transition duration-300\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useNavigate","useState","useEffect","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","navigate","user","localStorage","getItem","handleLogout","e","preventDefault","console","log","res","fetch","method","credentials","status","ok","removeItem","alert","error","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aslam/OneDrive/Desktop/MT/client/src/NavBar/NavBar.js"],"sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in (using localStorage as an example)\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) setIsLoggedIn(true);\r\n  }, []);\r\n\r\n  const handleLogout = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Logout initiated...\");\r\n\r\n    try {\r\n      // Call the backend to log out the user\r\n      const res = await fetch(\"http://localhost:5000/api/user/logout\", {\r\n        method: \"GET\", // Use GET method since that's what the backend expects\r\n        credentials: \"include\", // Include credentials if using sessions\r\n      });\r\n\r\n      console.log(\"Response status:\", res.status);\r\n\r\n      if (res.ok) {\r\n        localStorage.removeItem(\"user\"); // Remove user from localStorage\r\n        setIsLoggedIn(false); // Update state to reflect logged out\r\n        navigate(\"/\"); // Redirect to home page or login page after logout\r\n      } else {\r\n        alert(\"Logout failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-gradient-to-r from-blue-600 to-indigo-600 text-white p-4 shadow-lg\">\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        {/* Brand Name */}\r\n        <Link to=\"/\" className=\"text-2xl font-bold tracking-wide\">\r\n          chat<span className=\"text-yellow-400\">App</span>\r\n        </Link>\r\n\r\n        {/* Logout Button */}\r\n        {isLoggedIn && (\r\n          <button\r\n            onClick={handleLogout}\r\n            className=\"bg-yellow-400 text-blue-900 px-4 py-2 rounded-lg font-semibold shadow-md hover:bg-yellow-500 transition duration-300\"\r\n          >\r\n            Logout\r\n          </button>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BE,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,IAAI,EAAEF,aAAa,CAAC,IAAI,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAElC,IAAI;MACF;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAC/DC,MAAM,EAAE,KAAK;QAAE;QACfC,WAAW,EAAE,SAAS,CAAE;MAC1B,CAAC,CAAC;MAEFL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,GAAG,CAACI,MAAM,CAAC;MAE3C,IAAIJ,GAAG,CAACK,EAAE,EAAE;QACVZ,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACjChB,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACtBC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLgB,KAAK,CAAC,kCAAkC,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BD,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,oBACErB,OAAA;IAAKuB,SAAS,EAAC,uEAAuE;IAAAC,QAAA,eACpFxB,OAAA;MAAKuB,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAElExB,OAAA,CAACL,IAAI;QAAC8B,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,kCAAkC;QAAAC,QAAA,GAAC,MACpD,eAAAxB,OAAA;UAAMuB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,EAGN1B,UAAU,iBACTH,OAAA;QACE8B,OAAO,EAAErB,YAAa;QACtBc,SAAS,EAAC,sHAAsH;QAAAC,QAAA,EACjI;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAxDID,MAAM;EAAA,QAEOL,WAAW;AAAA;AAAAmC,EAAA,GAFxB9B,MAAM;AA0DZ,eAAeA,MAAM;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}